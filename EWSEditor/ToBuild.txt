ToBuild.txt
Build notes as of 1/22/2018.

EWSEditor was created as a sample which demonstrates the EWS Managed API and EWS calls.  It is an open-source sample and is not a Microsoft
application.  There is no support for this code or its build.


EWSEditor has three goals:

    1.Demonstrate the Exchange Web Services Managed API functionality and simplicity to developers through its source code. 
    2.Demonstrate the Exchange Web Services SOAP traffic used to perform actions initiated through an explorer user interface. 
    3.Assist non-developers in debugging and understanding Exchange stores by exploring items, folders, and their properties in depth. 

Each release of EWSEditor includes the distribution of the EWS Managed API it was built for. This version of EWSEditor uses .NET Framework 
version 4.7.2, which can be downloaded here: .NET Framework 4.7.2. The project is under Visual Studio 2013. This version of EwsEditor 
uses EWS Managed API built from GIT. The EWS Managed API requires a minimal of .NET 3.5. A copy of the 2.2 version of the EWS Managed 
API is included in case you wish to use it instead of the version built from GIT.  The GitHub source for the EWS Managed API has 
fixes which are not in the MSDN release.  You should consider pulling fresh code for the EWS Managed API and building it for usage 
with EWSEditor and other code.   

	EWS Managed API.
	https://www.microsoft.com/en-us/download/details.aspx?id=40779

To build:

Add the following NuGet packages:

    Microsoft.IdentityModel.Clients.ActiveDirectory  (For oAuth)

    System.Management.Automation.dll  (for something I’m adding for a future release).

	Microsoft.Bcl

    Microsoft.Bcl.Build

    Microsoft.Net.Http

There is a reference to CDOSYS, for which Visual Studio generated the ADODB and CDO interops.  If you need to regenerate them 
then remove the references and be sure to delete the interop files. Next set a new reference to CDOSYS and Visual studio will 
regenerate both interop files.  CDOSYS is a COM component which comes with Windows and has both 64bit and 32bit registrations.

Set a reference to .Net 4.7.2

	 https://dotnet.microsoft.com/download/dotnet-framework/net472

You should be able to use a newer version of .NET, however it’s not been tested against higher versions. The reason 4.5.1 was
chosen is that it is widely installed and had needed features and fixes for EWSEditor, so it’s used as the minimum bar for .NET. 
Later builds of EWSEditor may use a newer version of .NET.

If you have issues with the referenced components then update the compenents and references.
